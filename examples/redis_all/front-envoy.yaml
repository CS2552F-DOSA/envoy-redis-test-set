static_resources:
  listeners:
  - address:
      socket_address:
        address: 0.0.0.0
        port_value: 9911
    filter_chains:
    # - filters:
    #   - name: envoy.filters.network.http_connection_manager
    #     typed_config:
    #       "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
    #       codec_type: auto
    #       add_user_agent: true
    #       access_log:
    #       - name: envoy.access_loggers.file
    #         typed_config:
    #           "@type": type.googleapis.com/envoy.config.accesslog.v2.FileAccessLog
    #           path: "/dev/stdout"
    #       stat_prefix: egress_http
    #       common_http_protocol_options:
    #         idle_timeout: 0.840s
    #       use_remote_address: true
    #       route_config:
    #         name: local_route
    #         virtual_hosts:
    #         - name: backend
    #           domains:
    #           - "*"
    #           routes:
    #           - match:
    #               prefix: "/"
    #             route:
    #               cluster: redis_proxy
    #       http_filters:
    #       - name: envoy.filters.http.grpc_http1_bridge
    #         typed_config: {}
    #       - name: envoy.filters.http.router
    #         typed_config: {}
    # - filters:
    #   - name: envoy.filters.network.http_connection_manager
    #     typed_config:
    #       "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
    #       codec_type: auto
    #       add_user_agent: true
    #       stat_prefix: egress_http
    #       use_remote_address: true
    #       route_config:
    #         name: local_route
    #         virtual_hosts:
    #         - name: backend
    #           domains:
    #           - grpc
    #           routes:
    #           # - match:
    #           #     prefix: "*"
    #           #   route:
    #           #     cluster: redis-proxy
    #           - match:
    #               prefix: "/redis/prod"
    #             route:
    #               cluster: redis-proxy
    #           - match:
    #               prefix: "/redis/test"
    #             route:
    #               cluster: redis_test-proxy
      
    #       http_filters:
    #       - name: envoy.filters.http.grpc_http1_bridge
    #         typed_config: {}
    #       - name: envoy.filters.http.router
    #         typed_config: {}
    - filters:
      - name: envoy.filters.network.redis_proxy
        typed_config:
          "@type": type.googleapis.com/envoy.config.filter.network.redis_proxy.v2.RedisProxy
          stat_prefix: egress_redis
          settings:
            op_timeout: 5s
          prefix_routes:
            catch_all_route:
              cluster: redis-proxy
  clusters:
  - name: redis-proxy
    connect_timeout: 0.25s
    type: logical_dns
    dns_lookup_family: V4_ONLY
    lb_policy: round_robin
    http2_protocol_options: {}
    load_assignment:
      cluster_name: redis-proxy
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: redis-proxy
                port_value: 1999
  # - name: redis_test-proxy
  #   connect_timeout: 0.25s
  #   type: strict_dns
  #   lb_policy: round_robin
  #   http2_protocol_options: {}
  #   load_assignment:
  #     cluster_name: redis_test-proxy
  #     endpoints:
  #     - lb_endpoints:
  #       - endpoint:
  #           address:
  #             socket_address:
  #               address: redis_test-proxy
  #               port_value: 1998
admin:
  access_log_path: "/dev/null"
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 8001
